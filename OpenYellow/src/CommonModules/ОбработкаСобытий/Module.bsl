
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработатьСобытия() Экспорт
	
	Токен            = Инструментарий.ПолучитьНастройку("ТокенТелеграм");
	Чат              = Инструментарий.ПолучитьНастройку("ЧатТелеграм");
	Админ            = Инструментарий.ПолучитьНастройку("Админ");
	ПоследнееСобытие = Инструментарий.ПолучитьНастройку("ПоследнееСобытие");

	Обновления = OPI_Telegram.ПолучитьОбновления(Токен, 55, ПоследнееСобытие + 1);
	Результат  = Обновления["result"];
    Обработано = Ложь;
    Смещение   = Новый Соответствие;
	
	Для Каждого Элемент Из Результат Цикл
		
		ПоследнееСобытие = Элемент["update_id"];
		
		Обработано = ОбработатьСобытиеСозданияОбсуждения(Токен, Элемент);
        
        Если Обработано Тогда Продолжить; КонецЕсли;
        
        Обработано = ОбработатьСобытиеНовогоКомментария(Токен, Элемент, Смещение);
        
		Если Обработано Тогда Продолжить; КонецЕсли;
		
		Обработано = ОбработатьСобытиеМодерации(Токен, Элемент, Админ, Чат);
		
		Если Обработано Тогда Продолжить; КонецЕсли;
		
	КонецЦикла;
	
	Инструментарий.УстановитьНастройку("ПоследнееСобытие", ПоследнееСобытие);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбработатьСобытиеСозданияОбсуждения(Знач Токен, Знач Событие)
	
	Попытка
		
		Если Не OPI_Инструменты.ПолеКоллекцииСуществет(Событие, "message") Тогда
			Возврат Ложь;
		КонецЕсли;

		СообщениеЭлемента = Событие["message"];

		Если Не OPI_Инструменты.ПолеКоллекцииСуществет(СообщениеЭлемента, "forward_from_message_id")
			Или Не OPI_Инструменты.ПолеКоллекцииСуществет(СообщениеЭлемента, "is_automatic_forward") Тогда
			Возврат Ложь;
		КонецЕсли;

		Если Не СообщениеЭлемента["is_automatic_forward"] Тогда
			Возврат Ложь;
		КонецЕсли;

		ОригинальноеСообщение = СообщениеЭлемента["forward_from_message_id"];
		ПересланноеСообщение  = СообщениеЭлемента["message_id"];
		Чат                   = -СообщениеЭлемента["chat"]["id"] - 1000000000000;
		ЧатОригинала          = СообщениеЭлемента["sender_chat"]["id"];

		Если OPI_Инструменты.ПолеКоллекцииСуществет(СообщениеЭлемента, "reply_markup") Тогда
			Клавиатура = СообщениеЭлемента["reply_markup"];
		Иначе
			Клавиатура = Новый Структура("inline_keyboard", Новый Массив);
		КонецЕсли;

		ШаблонURL = "https://t.me/c/%1/%2?thread=%2";
		URL       = СтрШаблон(ШаблонURL, Чат, ПересланноеСообщение);

		Линия  = Новый Массив;
		Текст  = РаскодироватьСтроку("%F0%9F%92%AC Перейти к обсуждению (0)", СпособКодированияСтроки.URLВКодировкеURL);
		Кнопка = Новый Структура("url,text", URL, Текст);
		Линия.Добавить(Кнопка);

		Клавиатура["inline_keyboard"].Добавить(Линия);

		Ответ = OPI_Telegram.ОбновитьКлавиатуруСообщения(Токен, ЧатОригинала, ОригинальноеСообщение, Клавиатура);
		Возврат Истина;
        
	Исключение
		
		Инструментарий.ЗаписатьИсключение(ОписаниеОшибки());
        Возврат Ложь;
        
	КонецПопытки
	
КонецФункции

Функция ОбработатьСобытиеНовогоКомментария(Знач Токен, Знач Событие, Смещение)
    
    Попытка
        
        Если Не OPI_Инструменты.ПолеКоллекцииСуществет(Событие, "message") Тогда
            Возврат Ложь;
        КонецЕсли;
        
        СообщениеЭлемента = Событие["message"];
        
        Если Не OPI_Инструменты.ПолеКоллекцииСуществет(СообщениеЭлемента, "reply_to_message") Тогда
			Возврат Ложь;
        КонецЕсли;
        
        ЭлементОсновногоЧата = СообщениеЭлемента["reply_to_message"];
        
        Если Не OPI_Инструменты.ПолеКоллекцииСуществет(ЭлементОсновногоЧата, "forward_from_chat")
            Или Не OPI_Инструменты.ПолеКоллекцииСуществет(ЭлементОсновногоЧата, "forward_from_message_id")
            Или Не OPI_Инструменты.ПолеКоллекцииСуществет(ЭлементОсновногоЧата, "reply_markup") Тогда
            Возврат Ложь;
        КонецЕсли;
        
        ОригинальныйЧат       = ЭлементОсновногоЧата["forward_from_chat"]["id"];
        ОригинальноеСообщение = ЭлементОсновногоЧата["forward_from_message_id"];
        Клавиатура            = ЭлементОсновногоЧата["reply_markup"];
        
        ЧислоСмещения         = Смещение.Получить(ОригинальноеСообщение);
        ЧислоСмещения         = ?(ЗначениеЗаполнено(ЧислоСмещения), ЧислоСмещения, 0);
        
        Если Не OPI_Инструменты.ПолеКоллекцииСуществет(Клавиатура, "inline_keyboard") Тогда
            Возврат Ложь;
        КонецЕсли;
        
        Кнопки = Клавиатура["inline_keyboard"];
        
        Для Н = 0 По Кнопки.ВГраница() Цикл
            
            ТекстКнопки = Неопределено;
            Кнопка = Кнопки[Н][0];
            
            Если OPI_Инструменты.ПолеКоллекцииСуществет(Кнопка, "text") Тогда
                
                ТекстКнопки = Кнопка["text"];
                
                Если СтрНайти(ТекстКнопки, "Перейти к обсуждению") > 0 Тогда
                    
                    Если Не СтрЗаканчиваетсяНа(ТекстКнопки, ")") Тогда
                        
                        ИндексКомментария = Формат(ЧислоСмещения + 1, "ЧДЦ=0; ЧГ=0; ЧФ=(Ч)");
                        ТекстКнопки = ТекстКнопки + " " + ИндексКомментария;
                        
                    Иначе
                        
                        ЧастиТекста = СтрРазделить(ТекстКнопки, " ");
                        ЧислоКомментариев = ЧастиТекста[ЧастиТекста.ВГраница()];
                        ЧислоКомментариев = Лев(ЧислоКомментариев, СтрДлина(ЧислоКомментариев) - 1);
                        ЧислоКомментариев = Прав(ЧислоКомментариев, СтрДлина(ЧислоКомментариев) - 1);
                        
                        ЧислоКомментариев = Формат(Число(ЧислоКомментариев) + 1 + ЧислоСмещения, "ЧДЦ=0; ЧГ=0; ЧФ=(Ч)");
                        
                        ЧастиТекста[ЧастиТекста.ВГраница()] = ЧислоКомментариев;
                        
                        ТекстКнопки = СтрСоединить(ЧастиТекста, " ");
                        
                    КонецЕсли;
                    
                    Кнопка["text"] = ТекстКнопки;
                    
                    Смещение.Вставить(ОригинальноеСообщение, ЧислоСмещения + 1);
                    
                КонецЕсли;
                
            КонецЕсли;
            
        КонецЦикла;
        
        Ответ = OPI_Telegram.ОбновитьКлавиатуруСообщения(Токен, ОригинальныйЧат, ОригинальноеСообщение, Клавиатура);
        
        Возврат Истина;
        
    Исключение
        
        Инструментарий.ЗаписатьИсключение(ОписаниеОшибки());
        Возврат Ложь;
        
    КонецПопытки

КонецФункции

Функция ОбработатьСобытиеМодерации(Знач Токен, Знач Событие, Знач Админ, Знач Чат)
	
    Попытка
        
        Если Не OPI_Инструменты.ПолеКоллекцииСуществет(Событие, "callback_query") Тогда
            Возврат Ложь;
		КонецЕсли;
		
		Нажатие = Событие["callback_query"];
		Источник = Нажатие["from"]["id"];
		
		Если Строка(Источник) <> Админ Тогда
			Возврат Истина;
		КонецЕсли;
		
		Сообщение = Нажатие["data"];
		
		Если СтрНайти(Сообщение, ":") Тогда
			
			Части = СтрРазделить(Сообщение, ":");
			Результат = Булево(Части[0]);
			Пост      = Части[1];
			
			ПостСсылка = Справочники.Посты.НайтиПоКоду(Пост);
			
			Если Не ЗначениеЗаполнено(ПостСсылка) Тогда
				OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Админ, "Пост не найден!");
			Иначе
				
				Если ПостСсылка.Статус = Перечисления.СогласованиеПостов.Опубликован Тогда
					OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Админ, "Этот пост уже был опубликован!");
					Возврат Истина;
				КонецЕсли;
				ПостОбъект = ПостСсылка.ПолучитьОбъект();
				
				Если Результат Тогда
					
					Отправка = OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Чат, ПостОбъект.Текст, ПостОбъект.Клавиатура);
										
					Если Отправка["ok"] Тогда
						ПостОбъект.Статус = Перечисления.СогласованиеПостов.Опубликован;
						OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Админ, "Опубликовано!");
					Иначе
						Ошибка = Отправка["error"];
						ПостОбъект.Статус = Перечисления.СогласованиеПостов.Ошибка;
						ПостОбъект.Ошибка = Ошибка;
						OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Админ, СтрШаблон("Ошибка:%1", Ошибка));
					КонецЕсли;
					
				Иначе
					ПостОбъект.Статус = Перечисления.СогласованиеПостов.Отклонено;
					
					Если ЗначениеЗаполнено(ПостОбъект.Репозиторий) Тогда
						
						Репозиторий = ПостОбъект.Репозиторий.ПолучитьОбъект();
						Репозиторий.УстановитьПометкуУдаления(Истина);
						Репозиторий.Записать();
						
					КонецЕсли;
					
					OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Админ, "Отклонено!");
				КонецЕсли;
				
				ПостОбъект.Записать();
					
			КонецЕсли;
			
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	    Возврат Истина;
        
    Исключение
		
		OPI_Telegram.ОтправитьТекстовоеСообщение(Токен, Админ, "Непредвиденная ошибка!");
        Инструментарий.ЗаписатьИсключение(ОписаниеОшибки());
        Возврат Ложь;
        
    КонецПопытки
	
КонецФункции

#КонецОбласти
