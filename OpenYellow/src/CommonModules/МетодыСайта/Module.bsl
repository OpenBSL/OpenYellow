// @skip-check Undefined variable

Процедура ОбновитьЗначок(Знач Место, Знач Код, Знач ID, Знач Группа) Экспорт
	
	Токен = Константы.Токен.Получить();
	База  = Константы.База.Получить();

	Код 	= OPI_Инструменты.ЧислоВСтроку(Код);
	Место 	= OPI_Инструменты.ЧислоВСтроку(Место);
	Группа  = OPI_Инструменты.ЧислоВСтроку(Группа);
	Папка	= Константы.ПапкаСайта.Получить();
	
	URL             = "https://openyellow.notion.site/openyellow/" + База + "?p=" + ID + "&amp;pm=s";
	ПутьГруппы		= Папка + "badges\" + Группа;
	КаталогГруппы 	= Новый Файл(ПутьГруппы);
	
	Если Не КаталогГруппы.Существует() Тогда
		СоздатьКаталог(ПутьГруппы);
	КонецЕсли;
	
	Лого = Константы.Лого.Получить();

	СтруктураJSON = Новый Структура;
	СтруктураJSON.Вставить("schemaVersion", 1);
	СтруктураJSON.Вставить("label"        , "OpenYellow");
	СтруктураJSON.Вставить("message"      , "#" + Место);
	СтруктураJSON.Вставить("color"        , "yellow");
	СтруктураJSON.Вставить("logoSvg"      , Лого);
	
	СтрокаJSON  = OPI_Инструменты.JSONСтрокой(СтруктураJSON);	
	Путь        = ПутьГруппы + "\" + Код + ".json";
	
	Данные = Новый ТекстовыйДокумент;
	Данные.УстановитьТекст(СтрокаJSON);
	Данные.Записать(Путь, "UTF-8", Символы.ПС);
	
	Данные = Новый ДвоичныеДанные(Путь);
	Строка64 = Base64Строка(Данные);
	Строка64 = Прав(Строка64, СтрДлина(Строка64) - 4);
	
	ДанныеНаЗапись = Base64Значение(Строка64);
	ДанныеНаЗапись.Записать(Путь); 
	
	Значек    = "https://img.shields.io/endpoint?url=https://openyellow.neocities.org/badges/"
	+ OPI_Инструменты.ЧислоВСтроку(Группа)
	+ "/"
	+ OPI_Инструменты.ЧислоВСтроку(Код)
	+ ".json";
	
	Разметка = "![OpenYellow]("	+ Значек + ")";
	Разметка = "[" + Разметка + "]" + "(" + URL	+ ")";
	
	СоответствиеДанных = Новый Соответствие;
	СоответствиеДанных.Вставить("Значок", Разметка);

	Ответ = OPI_Notion.ИзменитьСвойстваСтраницы(Токен, ID, СоответствиеДанных);

КонецПроцедуры
