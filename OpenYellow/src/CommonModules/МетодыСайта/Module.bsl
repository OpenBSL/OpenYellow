// @skip-check Undefined variable

Процедура ОбновитьЗначок(Знач Место, Знач Код, Знач ID, Знач Группа) Экспорт
	
	Токен = Константы.Токен.Получить();
	База  = Константы.База.Получить();

	Код 	= OPI_Инструменты.ЧислоВСтроку(Код);
	Место 	= OPI_Инструменты.ЧислоВСтроку(Место);
	Группа  = OPI_Инструменты.ЧислоВСтроку(Группа);
	Папка	= Константы.ПапкаСайта.Получить();
	
	URL             = "https://openyellow.notion.site/openyellow/" + База + "?p=" + ID + "&amp;pm=s";
	ПутьГруппы		= Папка + "badges\" + Группа;
	КаталогГруппы 	= Новый Файл(ПутьГруппы);
	
	Если Не КаталогГруппы.Существует() Тогда
		СоздатьКаталог(ПутьГруппы);
	КонецЕсли;
	
	Лого = Константы.Лого.Получить();

	СтруктураJSON = Новый Структура;
	СтруктураJSON.Вставить("schemaVersion", 1);
	СтруктураJSON.Вставить("label"        , "OpenYellow");
	СтруктураJSON.Вставить("message"      , "#" + Место);
	СтруктураJSON.Вставить("color"        , "yellow");
	СтруктураJSON.Вставить("logoSvg"      , Лого);
	
	СтрокаJSON  = OPI_Инструменты.JSONСтрокой(СтруктураJSON);	
	Путь        = ПутьГруппы + "\" + Код + ".json";
	
	Данные = Новый ТекстовыйДокумент;
	Данные.УстановитьТекст(СтрокаJSON);
	Данные.Записать(Путь, "UTF-8", Символы.ПС);
	
	Данные = Новый ДвоичныеДанные(Путь);
	Строка64 = Base64Строка(Данные);
	Строка64 = Прав(Строка64, СтрДлина(Строка64) - 4);
	
	ДанныеНаЗапись = Base64Значение(Строка64);
	ДанныеНаЗапись.Записать(Путь); 
	
	Значек    = "https://img.shields.io/endpoint?url=https://openyellow.neocities.org/badges/"
	+ OPI_Инструменты.ЧислоВСтроку(Группа)
	+ "/"
	+ OPI_Инструменты.ЧислоВСтроку(Код)
	+ ".json";
	
	Разметка = "![OpenYellow]("	+ Значек + ")";
	Разметка = "[" + Разметка + "]" + "(" + URL	+ ")";
	
	СоответствиеДанных = Новый Соответствие;
	СоответствиеДанных.Вставить("Значок", Разметка);

	Ответ = OPI_Notion.ИзменитьСвойстваСтраницы(Токен, ID, СоответствиеДанных);

КонецПроцедуры

Процедура ВыгрузитьИндексы() Экспорт
    
    ИмяКаталога     = "/ypm_index/";
    КаталогИндексов = Константы.ПапкаСайта.Получить() + ИмяКаталога;
    ПоследняяГруппа = МетодыGitHub.ПолучитьНомерГруппы();
    МассивИндексов  = Новый Массив;
    АдресСайта      = Константы.АдресСайта.Получить();
    
    Для Н = 1 По ПоследняяГруппа Цикл
        
        ИмяФайла        = Строка(Н);
        ИмяСРасширением = ИмяФайла + ".json";
        
        Путь          = КаталогИндексов + ИмяСРасширением;
        ДанныеИндекса = ПолучитьИндексМенеджера(Н);
        Инструментарий.ЗаписатьJSONВФайл(ДанныеИндекса, Путь);
        МассивИндексов.Добавить(АдресСайта + ИмяКаталога + ИмяСРасширением);
        
    КонецЦикла;
    
    Инструментарий.ЗаписатьJSONВФайл(МассивИндексов, КаталогИндексов + "index.json");
       
КонецПроцедуры

Функция ПолучитьИндексМенеджера(Знач НомерГруппы)
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ РАЗЛИЧНЫЕ
        |   Репозитории.Наименование КАК Наименование,
        |   Репозитории.Автор.Наименование КАК Автор,
        |   Репозитории.Автор.URL КАК URLАвтора,
        |   ВЫРАЗИТЬ(Репозитории.Описание КАК СТРОКА(500)) КАК Описание,
        |   Репозитории.URL КАК URL,
        |   Репозитории.Лицензия КАК Лицензия,
        |   СтатистикаРепозиториев.Звезды КАК Звезды,
        |   Репозитории.Ссылка КАК Ссылка
        |ПОМЕСТИТЬ ДанныеРепозиториев
        |ИЗ
        |   РегистрСведений.Пакеты КАК Пакеты
        |       ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Репозитории КАК Репозитории
        |           ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатистикаРепозиториев КАК СтатистикаРепозиториев
        |           ПО (СтатистикаРепозиториев.Репозиторий = Репозитории.Ссылка)
        |       ПО Пакеты.Репозиторий = Репозитории.Ссылка
        |ГДЕ
        |   Репозитории.Группа = &Группа
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   ДанныеРепозиториев.Наименование КАК name,
        |   ДанныеРепозиториев.Описание КАК description,
        |   ДанныеРепозиториев.Автор КАК authorName,
        |   ДанныеРепозиториев.URLАвтора КАК authorURL,
        |   ДанныеРепозиториев.URL КАК URL,
        |   ДанныеРепозиториев.Лицензия КАК license,
        |   ДанныеРепозиториев.Звезды КАК stars,
        |   Пакеты.Версия КАК version,
        |   Пакеты.Файл КАК file,
        |   Пакеты.URL КАК fileURL,
        |   Пакеты.Размер КАК size,
        |   Пакеты.Скачиваний КАК downloads,
        |   Пакеты.Вид КАК type,
        |   ДанныеРепозиториев.Ссылка КАК object
        |ПОМЕСТИТЬ Финал
        |ИЗ
        |   ДанныеРепозиториев КАК ДанныеРепозиториев
        |       ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Пакеты КАК Пакеты
        |       ПО ДанныеРепозиториев.Ссылка = Пакеты.Репозиторий
        |
        |СГРУППИРОВАТЬ ПО
        |   Пакеты.Файл,
        |   Пакеты.URL,
        |   ДанныеРепозиториев.URLАвтора,
        |   ДанныеРепозиториев.Автор,
        |   ДанныеРепозиториев.URL,
        |   Пакеты.Версия,
        |   ДанныеРепозиториев.Описание,
        |   ДанныеРепозиториев.Лицензия,
        |   ДанныеРепозиториев.Наименование,
        |   ДанныеРепозиториев.Звезды,
        |   Пакеты.Размер,
        |   Пакеты.Скачиваний,
        |   Пакеты.Вид,
        |   ДанныеРепозиториев.Ссылка
        |;
        |
        |////////////////////////////////////////////////////////////////////////////////
        |ВЫБРАТЬ
        |   Финал.name КАК name,
        |   Финал.description КАК description,
        |   Финал.authorName КАК authorName,
        |   Финал.authorURL КАК authorURL,
        |   Финал.URL КАК URL,
        |   Финал.license КАК license,
        |   Финал.stars КАК stars,
        |   Финал.version КАК version,
        |   Финал.file КАК file,
        |   Финал.fileURL КАК fileURL,
        |   Финал.size КАК size,
        |   Финал.downloads КАК downloads,
        |   Финал.type КАК type,
        |   Финал.object КАК object
        |ИЗ
        |   Финал КАК Финал
        |
        |СГРУППИРОВАТЬ ПО
        |   Финал.authorURL,
        |   Финал.description,
        |   Финал.name,
        |   Финал.authorName,
        |   Финал.URL,
        |   Финал.license,
        |   Финал.version,
        |   Финал.file,
        |   Финал.fileURL,
        |   Финал.stars,
        |   Финал.size,
        |   Финал.downloads,
        |   Финал.type,
        |   Финал.object
        |ИТОГИ
        |   МАКСИМУМ(name),
        |   МАКСИМУМ(description),
        |   МАКСИМУМ(authorName),
        |   МАКСИМУМ(authorURL),
        |   МАКСИМУМ(URL),
        |   МАКСИМУМ(license),
        |   МАКСИМУМ(stars),
        |   МАКСИМУМ(file),
        |   МАКСИМУМ(size),
        |   МАКСИМУМ(downloads),
        |   МАКСИМУМ(type)
        |ПО
        |   object,
        |   version";
    
    Запрос.УстановитьПараметр("Группа", НомерГруппы);
    РезультатЗапроса = Запрос.Выполнить();
    МассивИндекса    = Новый Массив;
    ПоляРепозитория  = "name,description,picture,authorName,authorURL,URL,license,stars";
    ПоляФайла        = "file,fileURL,size,downloads,type";
    
    ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

        СтруктураТекущего = Новый Структура(ПоляРепозитория);
        ЗаполнитьЗначенияСвойств(СтруктураТекущего, ВыборкаДетальныеЗаписи);
        
        МассивВерсий  = Новый Массив;       
        ВыборкаВерсий = ВыборкаДетальныеЗаписи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
        
        Пока ВыборкаВерсий.Следующий() Цикл
            
            МассивФайлов    = Новый Массив;
            СтруктураВерсии = Новый Структура;
            СтруктураВерсии.Вставить("version", ВыборкаВерсий.version);
            
            ВыборкаФайлов = ВыборкаВерсий.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
            
            Пока ВыборкаФайлов.Следующий() Цикл
                
                СтруктураФайла = Новый Структура(ПоляФайла);
                ЗаполнитьЗначенияСвойств(СтруктураФайла, ВыборкаФайлов);
                МассивФайлов.Добавить(СтруктураФайла);
                
            КонецЦикла;
            
            СтруктураВерсии.Вставить("files", МассивФайлов);
            
            МассивВерсий.Добавить(СтруктураВерсии);
            
        КонецЦикла;
        
        СтруктураТекущего.Вставить("versions", МассивВерсий);
        
        МассивИндекса.Добавить(СтруктураТекущего);
        
    КонецЦикла;
    
    Возврат МассивИндекса;
    
КонецФункции